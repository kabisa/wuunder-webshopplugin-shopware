<?php

namespace Wuunder;

use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Tools\SchemaTool;
use Enlight_Event_EventArgs;
use Shopware\Components\Plugin;
use Shopware\Components\Plugin\Context\ActivateContext;
use Shopware\Components\Plugin\Context\DeactivateContext;
use Shopware\Components\Plugin\Context\InstallContext;
use Shopware\Components\Plugin\Context\UninstallContext;
use Shopware\Components\Plugin\Context\UpdateContext;
use Wuunder\Models\WuunderShipment;

class Wuunder extends Plugin
{
    public static function getSubscribedEvents()
    {
        return [
            'Enlight_Controller_Front_StartDispatch' => 'onStartDispatch',
            'Enlight_Controller_Action_PostDispatchSecure_Backend_Order' => 'onPostDispatch',
        ];
    }

    /**
     * Loads composer dependencies.
     */
    public function onStartDispatch()
    {
        require_once $this->getPath() . '/vendor/autoload.php';
        /** @var \Enlight_Loader $loader */
        $loader = $this->container->get('loader');
        $loader->registerNamespace('Shopware\Components', $this->getPath() . '/Components/');
    }

    public function onPostDispatch(Enlight_Event_EventArgs $args)
    {
        /** @var \Enlight_Controller_Action $controller */
        $controller = $args->getSubject();
        $view = $controller->View();
        $request = $controller->Request();

        $view->addTemplateDir(__DIR__ . '/Views');

        if ($request->getActionName() == 'index') {
            //$view->extendsTemplate('backend/swag_extend_customer/app.js');
        }

        //Inject some backend ext.js extensions for the order module
        if ($request->getActionName() == 'load') {
            $view->extendsTemplate('backend/wuunder/view/list.js');
            $view->extendsTemplate('backend/wuunder/view/panel.js');
            $view->extendsTemplate('backend/wuunder/controller/list.js');
        }
    }

    public function install(InstallContext $context)
    {
        parent::install($context);
        //Register models namespace
        /** @var \Enlight_Loader $loader */
        $loader = $this->container->get('loader');
        $loader->registerNamespace('Wuunder\Models', $this->getPath() . "Models");

        //Setup models in schema
        /** @var EntityManager $models */
        $models = $this->container->get('models');
        $meta_data[] = $models->getClassMetadata(WuunderShipment::class);
        $schema_tool = new SchemaTool($models);

        //Drop schema
        try {
            $schema_tool->dropSchema($meta_data);
        } catch (\Exception $e) { /* Ignore Exception*/ }

        $schema_tool->createSchema($meta_data);
    }

    public function activate(ActivateContext $context)
    {
        parent::activate($context); // TODO: Change the autogenerated stub
    }

    public function deactivate(DeactivateContext $context)
    {
        parent::deactivate($context); // TODO: Change the autogenerated stub
    }

    public function update(UpdateContext $context)
    {
        parent::update($context); // TODO: Change the autogenerated stub
    }

    function uninstall(UninstallContext $context)
    {
        parent::install($context);
        //Setup models in schema
        /** @var EntityManager $models */
        $models = $this->container->get('models');
        $meta_data[] = $models->getClassMetadata(WuunderShipment::class);
        $schema_tool = new SchemaTool($models);

        //Drop schema
        try {
            $schema_tool->dropSchema($meta_data);
        } catch (\Exception $e) { /* Ignore Exception*/ }
    }
}